{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/news-ticker.js","webpack:///./src/js/nav.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/js/swiper.esm.js","webpack:///./src/js/swiper.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","lastChild","$","offsetParent","offsetLeft","sheet","document","createElement","innerHTML","head","appendChild","window","addEventListener","classList","toggle","remove","doc","body","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","arr","self","length","selector","context","els","tempParent","html","trim","indexOf","toCreate","push","match","split","nodeType","unique","uniqueArray","fn","Class","Methods","addClass","className","classes","j","add","removeClass","hasClass","contains","toggleClass","attr","attrs","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","matchedItems","removeChild","toAdd","keys","forEach","methodName","Utils","obj","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","destroyed","transitionStart","direction","autoHeight","dir","slideTo","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","threshold","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","platform","ua","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","edge","ie","firefox","macos","windows","cordova","phonegap","electron","screenWidth","screenHeight","toLowerCase","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","touchEventsTarget","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","moveDistance","currentSlideSize","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","onResize","breakpoints","setBreakpoint","autoplay","running","paused","run","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","dummyEventAttached","dummyEventListener","defaults","init","updateOnWindowResize","uniqueNavElements","preloadImages","updateOnImagesReady","passiveListeners","containerModifierClass","wrapperClass","prototypes","attachEvents","touchEvents","onClick","start","move","end","passive","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","lastSlidePosition","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","shiftKey","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent","sign","ignoreWheelEvents","sensitivity","timeout","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","raw","animateSlider","releaseScroll","returnValue","getTime","handle","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","number","render","Parallax","opacity","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","onTransitionEnd","disableOnInteraction","pause","visibilityState","onVisibilityChange","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","$slideEl","slideAngle","round","tx","ty","tz","slideShadows","shadowBefore","shadowAfter","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","effectCube","overwriteParams","Swiper","EffectCube"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const lastChild = $('.ticker span:last-child').offsetParent.offsetLeft \r\n\r\nvar sheet = document.createElement('style')\r\nsheet.innerHTML = `@keyframes tikker { to {left: calc(${-(lastChild)}px + 300vw)}`;\r\ndocument.head.appendChild(sheet);\r\nwindow.addEventListener('resize',()=>{\r\n    document.head.appendChild(sheet);\r\n\r\n})\r\n","$('.ham').addEventListener('click',()=>{\r\n    $('nav').classList.toggle(\"active\")\r\n    $('.ham').classList.toggle(\"active\")\r\n})\r\n\r\n// services //\r\n\r\n$('.snip1401').addEventListener('mouseleave',()=>{\r\n    $('.snip1401').classList.remove(\"hover\")\r\n})\r\n\r\nlet myName = ()=> console.log(\"AymanMorsy\")","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 5.2.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 16, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document as document$1 } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document$1 instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!window.PointerEvent && ('maxTouchPoints' in window.navigator) && window.navigator.maxTouchPoints > 0,\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  function slidesForMargin(slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0\n          ? params.slidesPerGroup\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide.css(\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -translate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.snapGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  if (!ipad\n    && macos\n    && Support.touch\n    && (\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n      || (screenWidth === 768 && screenHeight === 1024) // other\n    )\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox;\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Webview\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone))\n    || (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n  device.webview = device.webView;\n  device.standalone = device.webView;\n\n  // Desktop\n  device.desktop = !(device.ios || device.android) || electron;\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n    if (device.macos) {\n      device.os = 'macos';\n    }\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.formElements)) preventDefault = false;\n    if (\n      document$1.activeElement\n      && $(document$1.activeElement).is(data.formElements)\n      && document$1.activeElement !== $targetEl[0]\n    ) {\n      document$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document$1.activeElement) {\n    if (e.target === document$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll () {\n  const swiper = this;\n  const { wrapperEl } = swiper;\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop;\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document$1.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params, $el,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerColumn'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = params.slidesPerColumn > 1;\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}multirow`);\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\n      }\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar virtual = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document$1.activeElement && document$1.activeElement.nodeName && (document$1.activeElement.nodeName.toLowerCase() === 'input' || document$1.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document$1).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document$1).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar keyboard = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document$1;\n\n  if (!isSupported) {\n    const element = document$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document$1.implementation\n    && document$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: Utils.now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents = lastEventBeforeSnap\n        && newEvent.time < lastEventBeforeSnap.time + 500\n        && newEvent.delta <= lastEventBeforeSnap.delta\n        && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15\n              && newEvent.time - firstEvent.time < 500\n              && firstEvent.delta - newEvent.delta >= 1\n              && newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar mousewheel = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        animateSlider: Mousewheel.animateSlider.bind(swiper),\n        releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n        lastScrollTime: Utils.now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar navigation = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar parallax = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar lazy = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar controller = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar a11y$1 = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar history = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document$1.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document$1.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document$1.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar hashNavigation = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onVisibilityChange() {\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n            swiper.autoplay.pause();\n          }\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n            swiper.autoplay.run();\n            swiper.autoplay.paused = false;\n          }\n        },\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd() {\n      const swiper = this;\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar effectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar effectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar thumbs = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      multipleActiveThumbs: true,\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport { a11y$1 as A11y, autoplay as Autoplay, controller as Controller, effectCoverflow as EffectCoverflow, effectCube as EffectCube, effectFade as EffectFade, effectFlip as EffectFlip, hashNavigation as HashNavigation, history as History, keyboard as Keyboard, lazy as Lazy, mousewheel as Mousewheel, navigation as Navigation, pagination as Pagination, parallax as Parallax, scrollbar as Scrollbar, Swiper, thumbs as Thumbs, virtual as Virtual, zoom as Zoom };\n//# sourceMappingURL=swiper.esm.js.map\n","import { Swiper, Navigation,Pagination,Parallax ,Autoplay,EffectCube} from 'swiper/js/swiper.esm.js';\r\n// Install modules\r\nSwiper.use([Navigation,Pagination,Parallax,Autoplay,EffectCube]);\r\n\r\n// Now you can use Swiper\r\n// لما تيجي تعمل سلايدر تاني هتعمله انستنس تانية بانشليز جديدة\r\nvar swiper = new Swiper('.swiper-container', {\r\npagination: {\r\nel: '.swiper-pagination',\r\ntype: 'progressbar',\r\n},\r\nautoplay: {\r\n  delay: 2500,\r\n},\r\nnavigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev',\r\n},\r\nloop: true,\r\n});\r\n\r\n\r\n// swiper.on('slideChange', function () {\r\n//     // $('.swiper-slide h1').classList.remove(\"active\")\r\n//     $('.swiper-slide h1').classList.add(\"active\")\r\n//   });"],"sourceRoot":""}